trigger:
  branches:
    include:
      - main
  paths:
    include:
      - terraform/main.tf
      - terraform/modules/**
      - terraform/dev.tfvars
      - terraform/prod.tfvars

variables:
  terraformVersion: '3.0.0'
  tfWorkingDirectory: './terraform'
  azureServiceConnection: 'Terraform-ADO-BuildDeploy'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: DetectEnvironment
    displayName: 'Detect Environment from Changes'
    jobs:
      - job: Detect
        steps:
          - checkout: self
          - bash: |
              echo "Detecting environment from changed files..."
              git diff --name-only HEAD^ HEAD > changes.txt
              if grep -q "dev.tfvars" changes.txt; then
                echo "##vso[task.setvariable variable=environment]dev"
                echo "##vso[task.setvariable variable=tfvarsFile]dev.tfvars"
              elif grep -q "prod.tfvars" changes.txt; then
                echo "##vso[task.setvariable variable=environment]prod"
                echo "##vso[task.setvariable variable=tfvarsFile]prod.tfvars"
              else
                echo "No environment-specific tfvars file changed. Skipping deployment."
                exit 1
            displayName: 'Set Environment Variables'

  - stage: DeployTerraform
    displayName: 'Deploy Terraform'
    dependsOn: DetectEnvironment
    condition: succeeded()
    jobs:
      - job: DeployDev
        displayName: 'Deploy to Dev'
        condition: eq(variables['environment'], 'dev')
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(devServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Installing Terraform..."
                sudo apt-get update && sudo apt-get install -y wget unzip
                wget https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip
                unzip terraform_${terraformVersion}_linux_amd64.zip
                sudo mv terraform /usr/local/bin/
                terraform -version

                echo "Running Terraform for Dev..."
                cd $(tfWorkingDirectory)
                terraform init -input=false
                terraform plan -var-file=dev.tfvars -out=tfplan -input=false
                terraform apply -auto-approve tfplan

      - job: DeployProd
        displayName: 'Deploy to Prod'
        condition: eq(variables['environment'], 'prod')
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: $(prodServiceConnection)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Installing Terraform..."
                sudo apt-get update && sudo apt-get install -y wget unzip
                wget https://releases.hashicorp.com/terraform/${terraformVersion}/terraform_${terraformVersion}_linux_amd64.zip
                unzip terraform_${terraformVersion}_linux_amd64.zip
                sudo mv terraform /usr/local/bin/
                terraform -version

                echo "Running Terraform for Prod..."
                cd $(tfWorkingDirectory)
                terraform init -input=false
                terraform plan -var-file=prod.tfvars -out=tfplan -input=false
                terraform apply -auto-approve tfplan
